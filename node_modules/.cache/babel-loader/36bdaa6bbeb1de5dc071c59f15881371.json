{"ast":null,"code":"export default function applyReverse(scale, config) {\n  if (config.reverse) {\n    var reversedRange = scale.range().slice().reverse();\n\n    if ('padding' in scale) {\n      // point and band scales\n      scale.range(reversedRange);\n    } else {\n      // the rest\n      scale.range(reversedRange);\n    }\n  }\n}","map":{"version":3,"sources":["/Users/ryanbraun/Desktop/reacttest/my-app/node_modules/@vx/scale/esm/operators/reverse.js"],"names":["applyReverse","scale","config","reverse","reversedRange","range","slice"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AAClD,MAAIA,MAAM,CAACC,OAAX,EAAoB;AAClB,QAAIC,aAAa,GAAGH,KAAK,CAACI,KAAN,GAAcC,KAAd,GAAsBH,OAAtB,EAApB;;AAEA,QAAI,aAAaF,KAAjB,EAAwB;AACtB;AACAA,MAAAA,KAAK,CAACI,KAAN,CAAYD,aAAZ;AACD,KAHD,MAGO;AACL;AACAH,MAAAA,KAAK,CAACI,KAAN,CAAYD,aAAZ;AACD;AACF;AACF","sourcesContent":["export default function applyReverse(scale, config) {\n  if (config.reverse) {\n    var reversedRange = scale.range().slice().reverse();\n\n    if ('padding' in scale) {\n      // point and band scales\n      scale.range(reversedRange);\n    } else {\n      // the rest\n      scale.range(reversedRange);\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}