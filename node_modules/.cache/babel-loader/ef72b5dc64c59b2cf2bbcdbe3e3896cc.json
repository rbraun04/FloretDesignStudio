{"ast":null,"code":"import memoize from 'lodash/memoize';\nvar MEASUREMENT_ELEMENT_ID = '__vx_splitpath_svg_path_measurement_id';\nvar SVG_NAMESPACE_URL = 'http://www.w3.org/2000/svg';\nexport function getSplitLineSegments(_ref) {\n  var path = _ref.path,\n      segments = _ref.segments,\n      _ref$sampleRate = _ref.sampleRate,\n      sampleRate = _ref$sampleRate === void 0 ? 0.25 : _ref$sampleRate;\n\n  try {\n    var pathElement = document.getElementById(MEASUREMENT_ELEMENT_ID); // create a single path element if not done already\n\n    if (!pathElement) {\n      var svg = document.createElementNS(SVG_NAMESPACE_URL, 'svg'); // not visible\n\n      svg.style.opacity = '0';\n      svg.style.width = '0';\n      svg.style.height = '0'; // off screen\n\n      svg.style.position = 'absolute';\n      svg.style.top = '-100%';\n      svg.style.left = '-100%'; // no mouse events\n\n      svg.style.pointerEvents = 'none';\n      pathElement = document.createElementNS(SVG_NAMESPACE_URL, 'path');\n      pathElement.setAttribute('id', MEASUREMENT_ELEMENT_ID);\n      svg.appendChild(pathElement);\n      document.body.appendChild(svg);\n    }\n\n    pathElement.setAttribute('d', path);\n    var totalPathLength = pathElement.getTotalLength();\n    var totalPieces = segments.reduce(function (sum, curr) {\n      return sum + curr.length;\n    }, 0);\n    var pieceSize = totalPathLength / totalPieces;\n    var cumulativeSize = 0;\n    var lineSegments = segments.map(function (segment) {\n      var segmentPointCount = segment.length;\n      var coords = [];\n\n      for (var i = 0; i < segmentPointCount + sampleRate; i += sampleRate) {\n        var distance = (cumulativeSize + i) * pieceSize;\n        var point = pathElement.getPointAtLength(distance);\n        coords.push(point);\n      }\n\n      cumulativeSize += segmentPointCount;\n      return coords;\n    });\n    return lineSegments;\n  } catch (e) {\n    return [];\n  }\n}\nexport default memoize(getSplitLineSegments, function (_ref2) {\n  var path = _ref2.path,\n      segments = _ref2.segments,\n      sampleRate = _ref2.sampleRate;\n  return path + \"_\" + segments.length + \"_\" + segments.map(function (segment) {\n    return segment.length;\n  }).join('-') + \"_\" + sampleRate;\n});","map":{"version":3,"sources":["/Users/ryanbraun/Desktop/reacttest/my-app/node_modules/@vx/shape/esm/util/getSplitLineSegments.js"],"names":["memoize","MEASUREMENT_ELEMENT_ID","SVG_NAMESPACE_URL","getSplitLineSegments","_ref","path","segments","_ref$sampleRate","sampleRate","pathElement","document","getElementById","svg","createElementNS","style","opacity","width","height","position","top","left","pointerEvents","setAttribute","appendChild","body","totalPathLength","getTotalLength","totalPieces","reduce","sum","curr","length","pieceSize","cumulativeSize","lineSegments","map","segment","segmentPointCount","coords","i","distance","point","getPointAtLength","push","e","_ref2","join"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,IAAIC,sBAAsB,GAAG,wCAA7B;AACA,IAAIC,iBAAiB,GAAG,4BAAxB;AACA,OAAO,SAASC,oBAAT,CAA8BC,IAA9B,EAAoC;AACzC,MAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;AAAA,MAEIC,eAAe,GAAGH,IAAI,CAACI,UAF3B;AAAA,MAGIA,UAAU,GAAGD,eAAe,KAAK,KAAK,CAAzB,GAA6B,IAA7B,GAAoCA,eAHrD;;AAKA,MAAI;AACF,QAAIE,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwBV,sBAAxB,CAAlB,CADE,CACiE;;AAEnE,QAAI,CAACQ,WAAL,EAAkB;AAChB,UAAIG,GAAG,GAAGF,QAAQ,CAACG,eAAT,CAAyBX,iBAAzB,EAA4C,KAA5C,CAAV,CADgB,CAC8C;;AAE9DU,MAAAA,GAAG,CAACE,KAAJ,CAAUC,OAAV,GAAoB,GAApB;AACAH,MAAAA,GAAG,CAACE,KAAJ,CAAUE,KAAV,GAAkB,GAAlB;AACAJ,MAAAA,GAAG,CAACE,KAAJ,CAAUG,MAAV,GAAmB,GAAnB,CALgB,CAKQ;;AAExBL,MAAAA,GAAG,CAACE,KAAJ,CAAUI,QAAV,GAAqB,UAArB;AACAN,MAAAA,GAAG,CAACE,KAAJ,CAAUK,GAAV,GAAgB,OAAhB;AACAP,MAAAA,GAAG,CAACE,KAAJ,CAAUM,IAAV,GAAiB,OAAjB,CATgB,CASU;;AAE1BR,MAAAA,GAAG,CAACE,KAAJ,CAAUO,aAAV,GAA0B,MAA1B;AACAZ,MAAAA,WAAW,GAAGC,QAAQ,CAACG,eAAT,CAAyBX,iBAAzB,EAA4C,MAA5C,CAAd;AACAO,MAAAA,WAAW,CAACa,YAAZ,CAAyB,IAAzB,EAA+BrB,sBAA/B;AACAW,MAAAA,GAAG,CAACW,WAAJ,CAAgBd,WAAhB;AACAC,MAAAA,QAAQ,CAACc,IAAT,CAAcD,WAAd,CAA0BX,GAA1B;AACD;;AAEDH,IAAAA,WAAW,CAACa,YAAZ,CAAyB,GAAzB,EAA8BjB,IAA9B;AACA,QAAIoB,eAAe,GAAGhB,WAAW,CAACiB,cAAZ,EAAtB;AACA,QAAIC,WAAW,GAAGrB,QAAQ,CAACsB,MAAT,CAAgB,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AACrD,aAAOD,GAAG,GAAGC,IAAI,CAACC,MAAlB;AACD,KAFiB,EAEf,CAFe,CAAlB;AAGA,QAAIC,SAAS,GAAGP,eAAe,GAAGE,WAAlC;AACA,QAAIM,cAAc,GAAG,CAArB;AACA,QAAIC,YAAY,GAAG5B,QAAQ,CAAC6B,GAAT,CAAa,UAAUC,OAAV,EAAmB;AACjD,UAAIC,iBAAiB,GAAGD,OAAO,CAACL,MAAhC;AACA,UAAIO,MAAM,GAAG,EAAb;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,iBAAiB,GAAG7B,UAAxC,EAAoD+B,CAAC,IAAI/B,UAAzD,EAAqE;AACnE,YAAIgC,QAAQ,GAAG,CAACP,cAAc,GAAGM,CAAlB,IAAuBP,SAAtC;AACA,YAAIS,KAAK,GAAGhC,WAAW,CAACiC,gBAAZ,CAA6BF,QAA7B,CAAZ;AACAF,QAAAA,MAAM,CAACK,IAAP,CAAYF,KAAZ;AACD;;AAEDR,MAAAA,cAAc,IAAII,iBAAlB;AACA,aAAOC,MAAP;AACD,KAZkB,CAAnB;AAaA,WAAOJ,YAAP;AACD,GA1CD,CA0CE,OAAOU,CAAP,EAAU;AACV,WAAO,EAAP;AACD;AACF;AACD,eAAe5C,OAAO,CAACG,oBAAD,EAAuB,UAAU0C,KAAV,EAAiB;AAC5D,MAAIxC,IAAI,GAAGwC,KAAK,CAACxC,IAAjB;AAAA,MACIC,QAAQ,GAAGuC,KAAK,CAACvC,QADrB;AAAA,MAEIE,UAAU,GAAGqC,KAAK,CAACrC,UAFvB;AAGA,SAAOH,IAAI,GAAG,GAAP,GAAaC,QAAQ,CAACyB,MAAtB,GAA+B,GAA/B,GAAqCzB,QAAQ,CAAC6B,GAAT,CAAa,UAAUC,OAAV,EAAmB;AAC1E,WAAOA,OAAO,CAACL,MAAf;AACD,GAF2C,EAEzCe,IAFyC,CAEpC,GAFoC,CAArC,GAEQ,GAFR,GAEctC,UAFrB;AAGD,CAPqB,CAAtB","sourcesContent":["import memoize from 'lodash/memoize';\nvar MEASUREMENT_ELEMENT_ID = '__vx_splitpath_svg_path_measurement_id';\nvar SVG_NAMESPACE_URL = 'http://www.w3.org/2000/svg';\nexport function getSplitLineSegments(_ref) {\n  var path = _ref.path,\n      segments = _ref.segments,\n      _ref$sampleRate = _ref.sampleRate,\n      sampleRate = _ref$sampleRate === void 0 ? 0.25 : _ref$sampleRate;\n\n  try {\n    var pathElement = document.getElementById(MEASUREMENT_ELEMENT_ID); // create a single path element if not done already\n\n    if (!pathElement) {\n      var svg = document.createElementNS(SVG_NAMESPACE_URL, 'svg'); // not visible\n\n      svg.style.opacity = '0';\n      svg.style.width = '0';\n      svg.style.height = '0'; // off screen\n\n      svg.style.position = 'absolute';\n      svg.style.top = '-100%';\n      svg.style.left = '-100%'; // no mouse events\n\n      svg.style.pointerEvents = 'none';\n      pathElement = document.createElementNS(SVG_NAMESPACE_URL, 'path');\n      pathElement.setAttribute('id', MEASUREMENT_ELEMENT_ID);\n      svg.appendChild(pathElement);\n      document.body.appendChild(svg);\n    }\n\n    pathElement.setAttribute('d', path);\n    var totalPathLength = pathElement.getTotalLength();\n    var totalPieces = segments.reduce(function (sum, curr) {\n      return sum + curr.length;\n    }, 0);\n    var pieceSize = totalPathLength / totalPieces;\n    var cumulativeSize = 0;\n    var lineSegments = segments.map(function (segment) {\n      var segmentPointCount = segment.length;\n      var coords = [];\n\n      for (var i = 0; i < segmentPointCount + sampleRate; i += sampleRate) {\n        var distance = (cumulativeSize + i) * pieceSize;\n        var point = pathElement.getPointAtLength(distance);\n        coords.push(point);\n      }\n\n      cumulativeSize += segmentPointCount;\n      return coords;\n    });\n    return lineSegments;\n  } catch (e) {\n    return [];\n  }\n}\nexport default memoize(getSplitLineSegments, function (_ref2) {\n  var path = _ref2.path,\n      segments = _ref2.segments,\n      sampleRate = _ref2.sampleRate;\n  return path + \"_\" + segments.length + \"_\" + segments.map(function (segment) {\n    return segment.length;\n  }).join('-') + \"_\" + sampleRate;\n});"]},"metadata":{},"sourceType":"module"}